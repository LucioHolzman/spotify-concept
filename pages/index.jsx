import { useState, useEffect, useCallback, useMemo, useContext } from "react";
import { contextApp } from "../context";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import stylesSpotify from "../styles/SpotifyComponents.module.css";
import { SpotifyCategoriesList, SpotifyCategorySelected } from "../components/SpotifyCategories";
import { SpotifyPlayLists, SpotifyPlayListSelected } from "../components/SpotifyPlayList";
import SpotifyTrack from "../components/SpotifyTrack";
import SpotifySearch from "../components/SpotifySearch";
import Spinner from "../components/Spinner";
import { storage } from "../firebase";

export default function Home() {
  const [images, setImages] = useState([]);

  const [imageUp, setImageUp] = useState(null);

  const [progress, setProgress] = useState(0);

  const handleChangeImage = (e) => {
    if (e.target.files[0]) {
      setImageUp(e.target.files[0]);
    }
  };

  const handleUpload = () => {
    const uploadTask = storage.ref(`images/${imageUp.name}`).put(imageUp);
    uploadTask.on(
      "state_changed",
      (snapshot) => {
        const progress = Math.round(
          (snapshot.bytesTransferred / snapshot.totalBytes) * 100
        );
        setProgress(progress);
        progress === 100 &&
          setInterval(() => {
            setProgress(0);
          }, 2500);
      },
      (error) => {
        console.log(error);
      },
      async () => {
        const url = await storage
          .ref("images")
          .child(imageUp.name)
          .getDownloadURL();
        setImages([...images, url]);
      }
    );
  };

  const fetchAllImages = useCallback(async () => {
    try {
      const listRef = storage.ref("images");
      const { items } = await listRef.listAll();
      const arrayImages = [];
      for (let item = 0; item < items.length; item++) {
        const element = items[item];
        const url = await element.getDownloadURL();
        arrayImages.push(url);
      }
      setImages(arrayImages);
    } catch (error) {
      console.error(error);
    }
  }, []);

  useEffect(() => {
    fetchAllImages();
  }, []);
  
  const { tracks } = useContext(contextApp)
  //------------Total---------------
  const total = useMemo(() => tracks.length, [tracks]);

  //------------Width---------------
  const [width, setWidth] = useState(450);

  //------------Height--------------
  const [height, setHeight] = useState(250);

  return (
    <div>
      <Head>
        <title>Galeria 3D</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.position}>
        <div className={styles.containerDimensions}>
          <div className={styles.containerInput}>
            <label className={styles.label} htmlFor="">
              Width
            </label>
            <input
              className={styles.numberInput}
              type="number"
              value={width}
              onChange={(e) => setWidth(e.target.value)}
            />
          </div>
          <div className={styles.containerInput}>
            <label className={styles.label} htmlFor="">
              Height
            </label>
            <input
              className={styles.numberInput}
              type="number"
              value={height}
              onChange={(e) => setHeight(e.target.value)}
            />
            <SpotifyCategoriesList />
            <SpotifyPlayLists />
          </div>

        </div>
        { tracks.length === 0 ? (
          <Spinner />
        ) : (
          <>
           <div className={styles.categoryAndListSelected}>
            <div className={styles.categoryAndListSelectedElem}>
          <SpotifyCategorySelected/>
            </div>
            <div className={styles.categoryAndListSelectedElem}>
            <SpotifySearch/>
            </div>
            <div className={styles.categoryAndListSelectedElem}>
          <SpotifyPlayListSelected/>
            </div>
          </div>
          <div className={styles.container}>
         
          <div className={styles.containerAllCarousel}>
          
            <div
              className={styles.main}
              style={{
                "--total": total,
                "--width-general": `${width}px`,
                "--height-general": `${height}px`,
              }}
            >
              <SpotifyTrack/>
            </div>
          </div>
          </div>
          </>
        )}
      </div>
    </div>
  );
}
